<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.2 on linux)" generated="20240705 12:50:01.350" rpa="false" schemaversion="4">
<suite id="s1" name="Morpheus-Hypnos" source="/home/Leonel/Documents/morpheus-hypnos-v4/morpheus-hypnos">
<suite id="s1-s1" name="Tests" source="/home/Leonel/Documents/morpheus-hypnos-v4/morpheus-hypnos/tests">
<suite id="s1-s1-s1" name="Smoke" source="/home/Leonel/Documents/morpheus-hypnos-v4/morpheus-hypnos/tests/smoke">
<suite id="s1-s1-s1-s1" name="Network" source="/home/Leonel/Documents/morpheus-hypnos-v4/morpheus-hypnos/tests/smoke/network">
<suite id="s1-s1-s1-s1-s1" name="Wan" source="/home/Leonel/Documents/morpheus-hypnos-v4/morpheus-hypnos/tests/smoke/network/wan">
<suite id="s1-s1-s1-s1-s1-s1" name="Portuguese" source="/home/Leonel/Documents/morpheus-hypnos-v4/morpheus-hypnos/tests/smoke/network/wan/portuguese.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Setup browser</arg>
<arg>url=${DUT_LOGIN_WEBPAGE_URL}</arg>
<arg>AND</arg>
<arg>Login to DUT</arg>
<arg>language=portuguese</arg>
<arg>AND</arg>
<arg>Access WAN network settings page</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Setup browser" library="common_resources">
<arg>url=${DUT_LOGIN_WEBPAGE_URL}</arg>
<kw name="Convert To Boolean" library="BuiltIn">
<var>${GLOBAL_DEBUG_BROWSER}</var>
<arg>${GLOBAL_DEBUG_BROWSER}</arg>
<doc>Converts the given item to Boolean true or false.</doc>
<msg timestamp="20240705 12:50:02.627" level="INFO">${GLOBAL_DEBUG_BROWSER} = True</msg>
<status status="PASS" starttime="20240705 12:50:02.626" endtime="20240705 12:50:02.627"/>
</kw>
<if>
<branch type="IF" condition="not ${GLOBAL_DEBUG_BROWSER}">
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20240705 12:50:02.628" endtime="20240705 12:50:02.629"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:02.628" endtime="20240705 12:50:02.629"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="Browser">
<arg>${url}</arg>
<arg>pause_on_failure=${false}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Opens a new browser instance. Use this keyword for quick experiments or debugging sessions.</doc>
<msg timestamp="20240705 12:50:02.630" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
<msg timestamp="20240705 12:50:02.631" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "/home/Leonel/Documents/morpheus-hypnos-v4/morpheus-hypnos/browser/traces/dbc0fe7c-0f3e-4c0f-88e8-67e1849dab30"}</msg>
<msg timestamp="20240705 12:50:03.241" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"/home/Leonel/Documents/morpheus-hypnos-v4/morpheus-hypnos/browser/traces/dbc0fe7c-0f3e-4c0f-88e8-67e1849dab30"}</msg>
<msg timestamp="20240705 12:50:03.242" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": true,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20240705 12:50:03.311" level="INFO">Successfully created context. </msg>
<msg timestamp="20240705 12:50:03.311" level="INFO">{'acceptDownloads': True, 'bypassCSP': True, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20240705 12:50:05.980" level="INFO">Successfully initialized new page object and opened url: http://192.168.0.22:80/login</msg>
<status status="PASS" starttime="20240705 12:50:02.629" endtime="20240705 12:50:05.980"/>
</kw>
<status status="PASS" starttime="20240705 12:50:02.629" endtime="20240705 12:50:05.980"/>
</branch>
<status status="PASS" starttime="20240705 12:50:02.628" endtime="20240705 12:50:05.981"/>
</if>
<status status="PASS" starttime="20240705 12:50:02.625" endtime="20240705 12:50:05.981"/>
</kw>
<kw name="Login to DUT" library="common_resources">
<arg>language=portuguese</arg>
<kw name="Go to DUT login webpage" library="common_resources">
<kw name="Go To" library="Browser">
<arg>${DUT_LOGIN_WEBPAGE_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20240705 12:50:06.503" level="INFO">Successfully opened URL http://192.168.0.22:80/login</msg>
<status status="PASS" starttime="20240705 12:50:05.987" endtime="20240705 12:50:06.504"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<arg>30s</arg>
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20240705 12:50:06.504" endtime="20240705 12:50:07.322"/>
</kw>
<status status="PASS" starttime="20240705 12:50:05.983" endtime="20240705 12:50:07.323"/>
</kw>
<kw name="Open language selection dropdown menu" library="login">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${LOGIN_PAGE_LANGUAGE_SELECT_OPTIONS_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:07.428" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:07.428" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:07.324" endtime="20240705 12:50:07.428"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${LOGIN_PAGE_LANGUAGE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:07.429" endtime="20240705 12:50:07.506"/>
</kw>
<status status="PASS" starttime="20240705 12:50:07.429" endtime="20240705 12:50:07.506"/>
</branch>
<status status="PASS" starttime="20240705 12:50:07.428" endtime="20240705 12:50:07.507"/>
</if>
<status status="PASS" starttime="20240705 12:50:07.323" endtime="20240705 12:50:07.507"/>
</kw>
<if>
<branch type="IF" condition="&quot;${language}&quot; == &quot;portuguese&quot;">
<kw name="Select Portuguese language" library="login">
<kw name="Click" library="Browser">
<arg>${LOGIN_PAGE_LANGUAGE_SELECT_OPTION_PT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:07.509" endtime="20240705 12:50:07.580"/>
</kw>
<status status="PASS" starttime="20240705 12:50:07.508" endtime="20240705 12:50:07.581"/>
</kw>
<status status="PASS" starttime="20240705 12:50:07.507" endtime="20240705 12:50:07.592"/>
</branch>
<branch type="ELSE IF" condition="&quot;${language}&quot; == &quot;english&quot;">
<kw name="Select English language" library="login">
<status status="NOT RUN" starttime="20240705 12:50:07.592" endtime="20240705 12:50:07.592"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:07.592" endtime="20240705 12:50:07.593"/>
</branch>
<branch type="ELSE IF" condition="&quot;${language}&quot; == &quot;spanish&quot;">
<kw name="Select Spanish language" library="login">
<status status="NOT RUN" starttime="20240705 12:50:07.593" endtime="20240705 12:50:07.593"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:07.593" endtime="20240705 12:50:07.593"/>
</branch>
<status status="PASS" starttime="20240705 12:50:07.507" endtime="20240705 12:50:07.593"/>
</if>
<kw name="Enter username &quot;${DUT_MGMT_USER}&quot;" library="login" sourcename="Enter username &quot;${username}&quot;">
<kw name="Type Text" library="Browser">
<arg>${LOGIN_PAGE_USERNAME_INPUT}</arg>
<arg>${username}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240705 12:50:07.595" level="INFO">Types the text 'admin' in the given field.</msg>
<status status="PASS" starttime="20240705 12:50:07.595" endtime="20240705 12:50:07.742"/>
</kw>
<status status="PASS" starttime="20240705 12:50:07.594" endtime="20240705 12:50:07.742"/>
</kw>
<kw name="Enter password &quot;${DUT_MGMT_PASSWORD}&quot;" library="login" sourcename="Enter password &quot;${password}&quot;">
<kw name="Type Secret" library="Browser">
<arg>${LOGIN_PAGE_PASSWORD_INPUT}</arg>
<arg>$password</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given secret from ``variable_name`` into the text field
found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:07.743" endtime="20240705 12:50:08.020"/>
</kw>
<status status="PASS" starttime="20240705 12:50:07.743" endtime="20240705 12:50:08.021"/>
</kw>
<kw name="Click login button" library="login">
<kw name="Click" library="Browser">
<arg>${LOGIN_PAGE_LOGIN_BUTTON}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:08.022" endtime="20240705 12:50:08.120"/>
</kw>
<status status="PASS" starttime="20240705 12:50:08.022" endtime="20240705 12:50:08.120"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<arg>30s</arg>
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20240705 12:50:08.121" endtime="20240705 12:50:08.134"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3x</arg>
<arg>1s</arg>
<arg>Side menu is opened</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Side menu is opened" library="common_resources">
<kw name="Get Element States" library="Browser">
<arg>xpath=//*[@id="sidebar-options-menu"]/div[1]/div/div/div/div</arg>
<arg>contains</arg>
<arg>visible</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:08.869" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:08.137" endtime="20240705 12:50:08.870"/>
</kw>
<status status="PASS" starttime="20240705 12:50:08.136" endtime="20240705 12:50:08.870"/>
</kw>
<status status="PASS" starttime="20240705 12:50:08.135" endtime="20240705 12:50:08.870"/>
</kw>
<status status="PASS" starttime="20240705 12:50:05.981" endtime="20240705 12:50:08.870"/>
</kw>
<kw name="Access WAN network settings page" library="wan">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${submenu_is_visible}</var>
<arg>Get element states</arg>
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<arg>contains</arg>
<arg>visible</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Get Element States" library="Browser">
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<arg>contains</arg>
<arg>visible</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:08.976" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:08.871" endtime="20240705 12:50:08.976"/>
</kw>
<msg timestamp="20240705 12:50:08.977" level="INFO">${submenu_is_visible} = True</msg>
<status status="PASS" starttime="20240705 12:50:08.871" endtime="20240705 12:50:08.977"/>
</kw>
<if>
<branch type="IF" condition="not ${submenu_is_visible}">
<kw name="Click" library="Browser">
<arg>${SIDEMENU_TOGGLE}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:08.978" endtime="20240705 12:50:08.978"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<arg>visible</arg>
<arg>5s</arg>
<arg>Network submenu was not visible (5 seconds timeout).</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<status status="NOT RUN" starttime="20240705 12:50:08.978" endtime="20240705 12:50:08.979"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:08.977" endtime="20240705 12:50:08.979"/>
</branch>
<status status="PASS" starttime="20240705 12:50:08.977" endtime="20240705 12:50:08.979"/>
</if>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${wan_option_is_visible}</var>
<arg>Get element states</arg>
<arg>${SIDEMENU_NETWORK_WAN}</arg>
<arg>contains</arg>
<arg>visible</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Get Element States" library="Browser">
<arg>${SIDEMENU_NETWORK_WAN}</arg>
<arg>contains</arg>
<arg>visible</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:10.788" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240705 12:50:10.788" level="INFO">See also file:///home/Leonel/Documents/morpheus-hypnos-v4/morpheus-hypnos/playwright-log.txt for additional details.</msg>
<msg timestamp="20240705 12:50:10.788" level="FAIL">Elements states '['detached']' (list) should contain '['visible']' (list)</msg>
<status status="FAIL" starttime="20240705 12:50:08.980" endtime="20240705 12:50:10.791"/>
</kw>
<msg timestamp="20240705 12:50:10.791" level="INFO">${wan_option_is_visible} = False</msg>
<status status="PASS" starttime="20240705 12:50:08.980" endtime="20240705 12:50:10.791"/>
</kw>
<if>
<branch type="IF" condition="not ${wan_option_is_visible}">
<kw name="Click" library="Browser">
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:10.793" endtime="20240705 12:50:10.932"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${SIDEMENU_NETWORK_WAN}</arg>
<arg>visible</arg>
<arg>5s</arg>
<arg>WAN network submenu option was not visible (5 seconds timeout).</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240705 12:50:10.949" level="INFO">Waited for Element with selector xpath=//*[@id="sidebar-options-menu"]/div[2]/ul/div[2]/p at state visible</msg>
<status status="PASS" starttime="20240705 12:50:10.932" endtime="20240705 12:50:10.949"/>
</kw>
<status status="PASS" starttime="20240705 12:50:10.792" endtime="20240705 12:50:10.949"/>
</branch>
<status status="PASS" starttime="20240705 12:50:10.791" endtime="20240705 12:50:10.950"/>
</if>
<kw name="Click" library="Browser">
<arg>${SIDEMENU_NETWORK_WAN}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:10.950" endtime="20240705 12:50:11.258"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240705 12:50:12.259" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240705 12:50:11.258" endtime="20240705 12:50:12.259"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<arg>30s</arg>
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20240705 12:50:12.260" endtime="20240705 12:50:12.269"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${NETWORK_WAN_PAGE_SAVE_SETTINGS_BUTTON}</arg>
<arg>visible</arg>
<arg>30s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240705 12:50:12.374" level="INFO">Waited for Element with selector xpath=//*[@id="root"]/div[3]/div/div[3]/button at state visible</msg>
<status status="PASS" starttime="20240705 12:50:12.269" endtime="20240705 12:50:12.374"/>
</kw>
<status status="PASS" starttime="20240705 12:50:08.870" endtime="20240705 12:50:12.374"/>
</kw>
<status status="PASS" starttime="20240705 12:50:02.624" endtime="20240705 12:50:12.375"/>
</kw>
<test id="s1-s1-s1-s1-s1-s1-t1" name="Factory Default settings for network WAN are correct (bridge)" line="24">
<kw name="Pop up screen only in router mode title should be &quot;Aviso&quot;" library="wan" sourcename="Pop up screen only in router mode title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_POP_UP_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:12.456" level="INFO">Text: 'Aviso'</msg>
<status status="PASS" starttime="20240705 12:50:12.393" endtime="20240705 12:50:12.456"/>
</kw>
<status status="PASS" starttime="20240705 12:50:12.392" endtime="20240705 12:50:12.456"/>
</kw>
<kw name="Pop up screen only in router mode text should be &quot;Esta funcionalidade está disponível apenas quando o modo de operação for roteador.&quot;" library="wan" sourcename="Pop up screen only in router mode text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_POP_UP_TEXT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:12.514" level="INFO">Text: 'Esta funcionalidade está disponível apenas quando o modo de operação for roteador.'</msg>
<status status="PASS" starttime="20240705 12:50:12.458" endtime="20240705 12:50:12.514"/>
</kw>
<status status="PASS" starttime="20240705 12:50:12.457" endtime="20240705 12:50:12.514"/>
</kw>
<kw name="Pop up button text should be &quot;Fechar&quot;" library="wan" sourcename="Pop up button text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_CLOSE_POP_UP_BUTTON}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:12.622" level="INFO">Text: 'Fechar'</msg>
<status status="PASS" starttime="20240705 12:50:12.517" endtime="20240705 12:50:12.622"/>
</kw>
<status status="PASS" starttime="20240705 12:50:12.516" endtime="20240705 12:50:12.622"/>
</kw>
<kw name="Close pop up" library="wan">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_CLOSE_POP_UP_BUTTON}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:12.624" endtime="20240705 12:50:12.783"/>
</kw>
<status status="PASS" starttime="20240705 12:50:12.623" endtime="20240705 12:50:12.783"/>
</kw>
<kw name="No Operation" library="BuiltIn" type="TEARDOWN">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240705 12:50:12.784" endtime="20240705 12:50:12.785"/>
</kw>
<tag>lang-pt</tag>
<tag>network</tag>
<tag>robot:continue-on-failure</tag>
<tag>smoke</tag>
<tag>wan</tag>
<tag>wip</tag>
<status status="PASS" starttime="20240705 12:50:12.375" endtime="20240705 12:50:12.785"/>
</test>
<test id="s1-s1-s1-s1-s1-s1-t2" name="DUT configuration for router mode" line="32">
<kw name="Access network operation mode settings page" library="operation_mode">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${submenu_is_visible}</var>
<arg>Get element states</arg>
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<arg>contains</arg>
<arg>visible</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Get Element States" library="Browser">
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<arg>contains</arg>
<arg>visible</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:12.948" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:12.854" endtime="20240705 12:50:12.949"/>
</kw>
<msg timestamp="20240705 12:50:12.949" level="INFO">${submenu_is_visible} = True</msg>
<status status="PASS" starttime="20240705 12:50:12.853" endtime="20240705 12:50:12.949"/>
</kw>
<if>
<branch type="IF" condition="not ${submenu_is_visible}">
<kw name="Click" library="Browser">
<arg>${SIDEMENU_TOGGLE}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:12.953" endtime="20240705 12:50:12.953"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<arg>visible</arg>
<arg>5s</arg>
<arg>Network submenu was not visible (5 seconds timeout).</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<status status="NOT RUN" starttime="20240705 12:50:12.954" endtime="20240705 12:50:12.954"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:12.951" endtime="20240705 12:50:12.954"/>
</branch>
<status status="PASS" starttime="20240705 12:50:12.949" endtime="20240705 12:50:12.955"/>
</if>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${ntp_option_is_visible}</var>
<arg>Get element states</arg>
<arg>${SIDEMENU_NETWORK_OPMODE}</arg>
<arg>contains</arg>
<arg>visible</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Get Element States" library="Browser">
<arg>${SIDEMENU_NETWORK_OPMODE}</arg>
<arg>contains</arg>
<arg>visible</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:13.029" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:12.956" endtime="20240705 12:50:13.029"/>
</kw>
<msg timestamp="20240705 12:50:13.030" level="INFO">${ntp_option_is_visible} = True</msg>
<status status="PASS" starttime="20240705 12:50:12.955" endtime="20240705 12:50:13.030"/>
</kw>
<if>
<branch type="IF" condition="not ${ntp_option_is_visible}">
<kw name="Click" library="Browser">
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:13.031" endtime="20240705 12:50:13.032"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${SIDEMENU_NETWORK_OPMODE}</arg>
<arg>visible</arg>
<arg>5s</arg>
<arg>Network operation mode submenu option was not visible (5 seconds timeout).</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<status status="NOT RUN" starttime="20240705 12:50:13.032" endtime="20240705 12:50:13.032"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:13.031" endtime="20240705 12:50:13.033"/>
</branch>
<status status="PASS" starttime="20240705 12:50:13.030" endtime="20240705 12:50:13.033"/>
</if>
<kw name="Click" library="Browser">
<arg>${SIDEMENU_NETWORK_OPMODE}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:13.034" endtime="20240705 12:50:13.139"/>
</kw>
<status status="PASS" starttime="20240705 12:50:12.852" endtime="20240705 12:50:13.140"/>
</kw>
<kw name="Select network operation mode &quot;Roteador&quot;" library="operation_mode" sourcename="Select network operation mode &quot;${text}&quot;">
<kw name="Open network operation selection dropdown menu" library="operation_mode">
<kw name="Sleep" library="BuiltIn">
<arg>6</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240705 12:50:19.142" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20240705 12:50:13.141" endtime="20240705 12:50:19.142"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_OPMODE_PAGE_OPMODE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:19.193" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:19.193" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:19.143" endtime="20240705 12:50:19.193"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_OPMODE_PAGE_OPMODE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:19.194" endtime="20240705 12:50:19.582"/>
</kw>
<status status="PASS" starttime="20240705 12:50:19.194" endtime="20240705 12:50:19.583"/>
</branch>
<status status="PASS" starttime="20240705 12:50:19.193" endtime="20240705 12:50:19.583"/>
</if>
<status status="PASS" starttime="20240705 12:50:13.141" endtime="20240705 12:50:19.583"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${opmodes_elem_list}</var>
<arg>css=[data-testid="opmode-select-dropdown"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:19.610" level="INFO">Found Locator@css=[data-testid="opmode-select-dropdown"] li &gt;&gt; nth=0,Locator@css=[data-testid="opmode-select-dropdown"] li &gt;&gt; nth=1 Locators successfully.</msg>
<msg timestamp="20240705 12:50:19.610" level="INFO">${opmodes_elem_list} = ['css=[data-testid="opmode-select-dropdown"] li &gt;&gt; nth=0', 'css=[data-testid="opmode-select-dropdown"] li &gt;&gt; nth=1']</msg>
<status status="PASS" starttime="20240705 12:50:19.584" endtime="20240705 12:50:19.610"/>
</kw>
<for flavor="IN">
<var>${opmode_elem}</var>
<value>@{opmodes_elem_list}</value>
<iter>
<var name="${opmode_elem}">css=[data-testid="opmode-select-dropdown"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${opmode_text}</var>
<arg>${opmode_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:19.639" level="INFO">Text: 'Bridge'</msg>
<msg timestamp="20240705 12:50:19.639" level="INFO">${opmode_text} = Bridge</msg>
<status status="PASS" starttime="20240705 12:50:19.612" endtime="20240705 12:50:19.639"/>
</kw>
<if>
<branch type="IF" condition="&quot;${opmode_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${opmode_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:19.641" endtime="20240705 12:50:19.641"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="opmode-select-dropdown"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=Network operation mode dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:19.642" endtime="20240705 12:50:19.642"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:19.643" endtime="20240705 12:50:19.643"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:19.640" endtime="20240705 12:50:19.643"/>
</branch>
<status status="PASS" starttime="20240705 12:50:19.640" endtime="20240705 12:50:19.643"/>
</if>
<status status="PASS" starttime="20240705 12:50:19.611" endtime="20240705 12:50:19.644"/>
</iter>
<iter>
<var name="${opmode_elem}">css=[data-testid="opmode-select-dropdown"] li &gt;&gt; nth=1</var>
<kw name="Get Text" library="Browser">
<var>${opmode_text}</var>
<arg>${opmode_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:19.683" level="INFO">Text: 'Roteador'</msg>
<msg timestamp="20240705 12:50:19.683" level="INFO">${opmode_text} = Roteador</msg>
<status status="PASS" starttime="20240705 12:50:19.645" endtime="20240705 12:50:19.683"/>
</kw>
<if>
<branch type="IF" condition="&quot;${opmode_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${opmode_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:19.684" endtime="20240705 12:50:19.768"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="opmode-select-dropdown"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=Network operation mode dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:19.826" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:19.769" endtime="20240705 12:50:19.826"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:19.826" endtime="20240705 12:50:19.827"/>
</return>
<status status="PASS" starttime="20240705 12:50:19.684" endtime="20240705 12:50:19.827"/>
</branch>
<status status="PASS" starttime="20240705 12:50:19.684" endtime="20240705 12:50:19.827"/>
</if>
<status status="PASS" starttime="20240705 12:50:19.644" endtime="20240705 12:50:19.828"/>
</iter>
<status status="PASS" starttime="20240705 12:50:19.611" endtime="20240705 12:50:19.828"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Network operation mode ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:19.831" endtime="20240705 12:50:19.832"/>
</kw>
<status status="PASS" starttime="20240705 12:50:13.140" endtime="20240705 12:50:19.832"/>
</kw>
<kw name="Save settings" library="common_resources">
<kw name="LocalStorage Get Item" library="Browser">
<var>${dut_language}</var>
<arg>lang</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get saved data from the local storage.</doc>
<msg timestamp="20240705 12:50:19.859" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240705 12:50:19.859" level="INFO">${dut_language} = pt-BR</msg>
<status status="PASS" starttime="20240705 12:50:19.834" endtime="20240705 12:50:19.859"/>
</kw>
<if>
<branch type="IF" condition="&quot;${dut_language}&quot; == &quot;pt-BR&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${save_settings_button_text}</var>
<arg>Salvar</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240705 12:50:19.869" level="INFO">${save_settings_button_text} = Salvar</msg>
<status status="PASS" starttime="20240705 12:50:19.868" endtime="20240705 12:50:19.869"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${save_settings_success_msg}</var>
<arg>Configurações salvas com sucesso.</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240705 12:50:19.871" level="INFO">${save_settings_success_msg} = Configurações salvas com sucesso.</msg>
<status status="PASS" starttime="20240705 12:50:19.870" endtime="20240705 12:50:19.871"/>
</kw>
<status status="PASS" starttime="20240705 12:50:19.865" endtime="20240705 12:50:19.871"/>
</branch>
<branch type="ELSE IF" condition="&quot;${dut_language}&quot; == &quot;en&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${save_settings_button_text}</var>
<arg>Save</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240705 12:50:19.872" endtime="20240705 12:50:19.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${save_settings_success_msg}</var>
<arg>Settings saved successfully.</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240705 12:50:19.873" endtime="20240705 12:50:19.873"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:19.872" endtime="20240705 12:50:19.873"/>
</branch>
<branch type="ELSE IF" condition="&quot;${dut_language}&quot; == &quot;es&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${save_settings_button_text}</var>
<arg>Guardar</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240705 12:50:19.875" endtime="20240705 12:50:19.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${save_settings_success_msg}</var>
<arg>Configuraciones guardadas exitosamente.</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240705 12:50:19.876" endtime="20240705 12:50:19.877"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:19.874" endtime="20240705 12:50:19.877"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>message=It was not possible to save settings. DUT language could not be determined from local storage key 'lang'.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:19.879" endtime="20240705 12:50:19.880"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:19.878" endtime="20240705 12:50:19.880"/>
</branch>
<status status="PASS" starttime="20240705 12:50:19.865" endtime="20240705 12:50:19.880"/>
</if>
<kw name="Get Element By" library="Browser">
<var>${save_settings_button}</var>
<arg>text</arg>
<arg>${save_settings_button_text}</arg>
<arg>exact=${true}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Allows locating elements by their features.</doc>
<msg timestamp="20240705 12:50:19.904" level="INFO">Locator found successfully.</msg>
<msg timestamp="20240705 12:50:19.905" level="INFO">${save_settings_button} = internal:text="Salvar"s</msg>
<status status="PASS" starttime="20240705 12:50:19.883" endtime="20240705 12:50:19.905"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${el_states}</var>
<arg>${save_settings_button}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:19.973" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:19.973" level="INFO">${el_states} = ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:19.906" endtime="20240705 12:50:19.973"/>
</kw>
<if>
<branch type="IF" condition="&quot;disabled&quot; not in ${el_states}">
<kw name="Log" library="BuiltIn">
<arg>Save settings button is enabled (settings are going to be discarded).</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240705 12:50:19.975" level="INFO">Save settings button is enabled (settings are going to be discarded).</msg>
<status status="PASS" starttime="20240705 12:50:19.974" endtime="20240705 12:50:19.975"/>
</kw>
<kw name="Click" library="Browser">
<arg>${save_settings_button}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:19.975" endtime="20240705 12:50:20.042"/>
</kw>
<kw name="Wait until message &quot;${save_settings_success_msg}&quot; is displayed" library="common_resources" sourcename="Wait until message &quot;${text}&quot; is displayed">
<kw name="Get Element By" library="Browser">
<arg>selection_strategy=text</arg>
<arg>text=${text}</arg>
<arg>exact=${true}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Allows locating elements by their features.</doc>
<msg timestamp="20240705 12:50:20.873" level="INFO">Locator found successfully.</msg>
<status status="PASS" starttime="20240705 12:50:20.044" endtime="20240705 12:50:20.874"/>
</kw>
<status status="PASS" starttime="20240705 12:50:20.043" endtime="20240705 12:50:20.874"/>
</kw>
<status status="PASS" starttime="20240705 12:50:19.973" endtime="20240705 12:50:20.874"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Save settings button is disabled (no settings to discard).</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20240705 12:50:20.874" endtime="20240705 12:50:20.875"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:20.874" endtime="20240705 12:50:20.875"/>
</branch>
<status status="PASS" starttime="20240705 12:50:19.973" endtime="20240705 12:50:20.875"/>
</if>
<status status="PASS" starttime="20240705 12:50:19.833" endtime="20240705 12:50:20.875"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>Run keywords</arg>
<arg>Clear browser storages</arg>
<arg>AND</arg>
<arg>Login to DUT</arg>
<arg>language=portuguese</arg>
<arg>AND</arg>
<arg>Access WAN network settings page</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20240705 12:50:20.876" endtime="20240705 12:50:20.876"/>
</kw>
<tag>lang-pt</tag>
<tag>network</tag>
<tag>robot:continue-on-failure</tag>
<tag>smoke</tag>
<tag>wan</tag>
<tag>wip</tag>
<status status="PASS" starttime="20240705 12:50:12.828" endtime="20240705 12:50:20.876"/>
</test>
<test id="s1-s1-s1-s1-s1-s1-t3" name="Factory default IPv4 settings WAN are correct" line="38">
<kw name="Access WAN network settings page" library="wan">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${submenu_is_visible}</var>
<arg>Get element states</arg>
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<arg>contains</arg>
<arg>visible</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Get Element States" library="Browser">
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<arg>contains</arg>
<arg>visible</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:21.119" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:20.974" endtime="20240705 12:50:21.119"/>
</kw>
<msg timestamp="20240705 12:50:21.120" level="INFO">${submenu_is_visible} = True</msg>
<status status="PASS" starttime="20240705 12:50:20.960" endtime="20240705 12:50:21.120"/>
</kw>
<if>
<branch type="IF" condition="not ${submenu_is_visible}">
<kw name="Click" library="Browser">
<arg>${SIDEMENU_TOGGLE}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:21.121" endtime="20240705 12:50:21.122"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<arg>visible</arg>
<arg>5s</arg>
<arg>Network submenu was not visible (5 seconds timeout).</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<status status="NOT RUN" starttime="20240705 12:50:21.122" endtime="20240705 12:50:21.123"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:21.121" endtime="20240705 12:50:21.123"/>
</branch>
<status status="PASS" starttime="20240705 12:50:21.120" endtime="20240705 12:50:21.124"/>
</if>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${wan_option_is_visible}</var>
<arg>Get element states</arg>
<arg>${SIDEMENU_NETWORK_WAN}</arg>
<arg>contains</arg>
<arg>visible</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Get Element States" library="Browser">
<arg>${SIDEMENU_NETWORK_WAN}</arg>
<arg>contains</arg>
<arg>visible</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:21.220" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:21.128" endtime="20240705 12:50:21.220"/>
</kw>
<msg timestamp="20240705 12:50:21.222" level="INFO">${wan_option_is_visible} = True</msg>
<status status="PASS" starttime="20240705 12:50:21.125" endtime="20240705 12:50:21.222"/>
</kw>
<if>
<branch type="IF" condition="not ${wan_option_is_visible}">
<kw name="Click" library="Browser">
<arg>${SIDEMENU_NETWORK_SUBMENU}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:21.224" endtime="20240705 12:50:21.224"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${SIDEMENU_NETWORK_WAN}</arg>
<arg>visible</arg>
<arg>5s</arg>
<arg>WAN network submenu option was not visible (5 seconds timeout).</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<status status="NOT RUN" starttime="20240705 12:50:21.225" endtime="20240705 12:50:21.225"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:21.223" endtime="20240705 12:50:21.226"/>
</branch>
<status status="PASS" starttime="20240705 12:50:21.222" endtime="20240705 12:50:21.226"/>
</if>
<kw name="Click" library="Browser">
<arg>${SIDEMENU_NETWORK_WAN}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:21.226" endtime="20240705 12:50:21.345"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240705 12:50:22.346" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240705 12:50:21.345" endtime="20240705 12:50:22.346"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<arg>30s</arg>
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20240705 12:50:22.347" endtime="20240705 12:50:22.356"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${NETWORK_WAN_PAGE_SAVE_SETTINGS_BUTTON}</arg>
<arg>visible</arg>
<arg>30s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240705 12:50:22.364" level="INFO">Waited for Element with selector xpath=//*[@id="root"]/div[3]/div/div[3]/button at state visible</msg>
<status status="PASS" starttime="20240705 12:50:22.356" endtime="20240705 12:50:22.364"/>
</kw>
<status status="PASS" starttime="20240705 12:50:20.957" endtime="20240705 12:50:22.364"/>
</kw>
<kw name="Page inner title WAN page should be &quot;WAN&quot;" library="wan" sourcename="Page inner title WAN page should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_INNER_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:22.397" level="INFO">Text: 'WAN'</msg>
<status status="PASS" starttime="20240705 12:50:22.365" endtime="20240705 12:50:22.398"/>
</kw>
<status status="PASS" starttime="20240705 12:50:22.365" endtime="20240705 12:50:22.400"/>
</kw>
<kw name="IPv4 configuration type select title should be &quot;Tipo de configuração&quot;" library="wan" sourcename="IPv4 configuration type select title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:22.455" level="INFO">Text: 'Tipo de configuração'</msg>
<status status="PASS" starttime="20240705 12:50:22.402" endtime="20240705 12:50:22.455"/>
</kw>
<status status="PASS" starttime="20240705 12:50:22.401" endtime="20240705 12:50:22.455"/>
</kw>
<kw name="IPv4 configuration type select option should be &quot;Cliente DHCP&quot;" library="wan" sourcename="IPv4 configuration type select option should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:22.513" level="INFO">Text: 'Cliente DHCP'</msg>
<status status="PASS" starttime="20240705 12:50:22.457" endtime="20240705 12:50:22.513"/>
</kw>
<status status="PASS" starttime="20240705 12:50:22.456" endtime="20240705 12:50:22.514"/>
</kw>
<kw name="MTU input text should be &quot;1500&quot;" library="wan" sourcename="MTU input text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_MTU_INPUT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:22.586" level="INFO">Text: '1500'</msg>
<status status="PASS" starttime="20240705 12:50:22.515" endtime="20240705 12:50:22.587"/>
</kw>
<status status="PASS" starttime="20240705 12:50:22.514" endtime="20240705 12:50:22.588"/>
</kw>
<kw name="Select IPv4 configuration type &quot;IP Estático&quot;" library="wan" sourcename="Select IPv4 configuration type &quot;${text}&quot;">
<kw name="Open IPv4 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:22.656" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:22.656" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:22.589" endtime="20240705 12:50:22.656"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:22.657" endtime="20240705 12:50:22.744"/>
</kw>
<status status="PASS" starttime="20240705 12:50:22.657" endtime="20240705 12:50:22.744"/>
</branch>
<status status="PASS" starttime="20240705 12:50:22.657" endtime="20240705 12:50:22.744"/>
</if>
<status status="PASS" starttime="20240705 12:50:22.589" endtime="20240705 12:50:22.745"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv4_elem_list}</var>
<arg>css=[data-testid="ipv4-config-mode-select-ul"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:22.771" level="INFO">Found Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2 Locators successfully.</msg>
<msg timestamp="20240705 12:50:22.771" level="INFO">${ipv4_elem_list} = ['css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2']</msg>
<status status="PASS" starttime="20240705 12:50:22.745" endtime="20240705 12:50:22.771"/>
</kw>
<for flavor="IN">
<var>${ipv4_elem}</var>
<value>@{ipv4_elem_list}</value>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:22.806" level="INFO">Text: 'IP Estático'</msg>
<msg timestamp="20240705 12:50:22.807" level="INFO">${ipv4_text} = IP Estático</msg>
<status status="PASS" starttime="20240705 12:50:22.772" endtime="20240705 12:50:22.807"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:22.808" endtime="20240705 12:50:22.874"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:22.927" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:22.874" endtime="20240705 12:50:22.927"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:22.928" endtime="20240705 12:50:22.928"/>
</return>
<status status="PASS" starttime="20240705 12:50:22.807" endtime="20240705 12:50:22.929"/>
</branch>
<status status="PASS" starttime="20240705 12:50:22.807" endtime="20240705 12:50:22.929"/>
</if>
<status status="PASS" starttime="20240705 12:50:22.772" endtime="20240705 12:50:22.929"/>
</iter>
<status status="PASS" starttime="20240705 12:50:22.771" endtime="20240705 12:50:22.929"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv4 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:22.930" endtime="20240705 12:50:22.930"/>
</kw>
<status status="PASS" starttime="20240705 12:50:22.588" endtime="20240705 12:50:22.931"/>
</kw>
<kw name="IPv4 address input title should be &quot;Endereço IPv4&quot;" library="wan" sourcename="IPv4 address input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_ADDRESS_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:22.988" level="INFO">Text: 'Endereço IPv4'</msg>
<status status="PASS" starttime="20240705 12:50:22.932" endtime="20240705 12:50:22.989"/>
</kw>
<status status="PASS" starttime="20240705 12:50:22.932" endtime="20240705 12:50:22.989"/>
</kw>
<kw name="Value of the IPv4 should be" library="wan">
<arg>[a-zA-Z0-9_]+</arg>
<kw name="Get Text" library="Browser">
<var>${ipv4_value}</var>
<arg>${NETWORK_WAN_PAGE_IPV4_ADDRESS_INPUT}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.050" level="INFO">Text: '192.168.0.1'</msg>
<msg timestamp="20240705 12:50:23.050" level="INFO">${ipv4_value} = 192.168.0.1</msg>
<status status="PASS" starttime="20240705 12:50:22.991" endtime="20240705 12:50:23.050"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${ipv4_value}</arg>
<arg>${expected_pattern}</arg>
<arg>msg=IPv4 value does not match expected pattern</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240705 12:50:23.051" endtime="20240705 12:50:23.052"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>IPv4: ${ipv4_value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240705 12:50:23.052" endtime="20240705 12:50:23.053"/>
</kw>
<status status="PASS" starttime="20240705 12:50:22.989" endtime="20240705 12:50:23.053"/>
</kw>
<kw name="IPv4 address input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_ADDRESS_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=IPv4 address input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.121" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:23.054" endtime="20240705 12:50:23.122"/>
</kw>
<status status="PASS" starttime="20240705 12:50:23.054" endtime="20240705 12:50:23.122"/>
</kw>
<kw name="Subnet mask input title should be &quot;Máscara de Sub-rede&quot;" library="wan" sourcename="Subnet mask input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_SUBNET_MASK_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.172" level="INFO">Text: 'Máscara de Sub-rede'</msg>
<status status="PASS" starttime="20240705 12:50:23.126" endtime="20240705 12:50:23.173"/>
</kw>
<status status="PASS" starttime="20240705 12:50:23.125" endtime="20240705 12:50:23.173"/>
</kw>
<kw name="Value of the mask should be" library="wan">
<arg>[a-zA-Z0-9_]+</arg>
<kw name="Get Text" library="Browser">
<var>${mask_value}</var>
<arg>${NETWORK_WAN_PAGE_SUBNET_MASK_INPUT}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.229" level="INFO">Text: '24'</msg>
<msg timestamp="20240705 12:50:23.229" level="INFO">${mask_value} = 24</msg>
<status status="PASS" starttime="20240705 12:50:23.175" endtime="20240705 12:50:23.229"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${mask_value}</arg>
<arg>${expected_pattern}</arg>
<arg>msg=Mask value does not match expected pattern</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240705 12:50:23.229" endtime="20240705 12:50:23.230"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Mask: ${mask_value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240705 12:50:23.230" endtime="20240705 12:50:23.230"/>
</kw>
<status status="PASS" starttime="20240705 12:50:23.174" endtime="20240705 12:50:23.231"/>
</kw>
<kw name="Subnet mask input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_SUBNET_MASK_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=Subnet mask input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.341" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:23.232" endtime="20240705 12:50:23.342"/>
</kw>
<status status="PASS" starttime="20240705 12:50:23.231" endtime="20240705 12:50:23.342"/>
</kw>
<kw name="Gateway IPv4 input title should be &quot;Gateway&quot;" library="wan" sourcename="Gateway IPv4 input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_GATEWAY_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.420" level="INFO">Text: 'Gateway'</msg>
<status status="PASS" starttime="20240705 12:50:23.344" endtime="20240705 12:50:23.420"/>
</kw>
<status status="PASS" starttime="20240705 12:50:23.343" endtime="20240705 12:50:23.420"/>
</kw>
<kw name="Value of the gateway IPv4 should be" library="wan">
<arg>[a-zA-Z0-9_]+</arg>
<kw name="Get Text" library="Browser">
<var>${gateway_value}</var>
<arg>${NETWORK_WAN_PAGE_IPV4_GATEWAY_INPUT}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.489" level="INFO">Text: '192.168.0.254'</msg>
<msg timestamp="20240705 12:50:23.489" level="INFO">${gateway_value} = 192.168.0.254</msg>
<status status="PASS" starttime="20240705 12:50:23.422" endtime="20240705 12:50:23.489"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${gateway_value}</arg>
<arg>${expected_pattern}</arg>
<arg>msg=Gateway IPv4 value does not match expected pattern</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240705 12:50:23.490" endtime="20240705 12:50:23.491"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Gateway IPv4: ${gateway_value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240705 12:50:23.491" endtime="20240705 12:50:23.492"/>
</kw>
<status status="PASS" starttime="20240705 12:50:23.421" endtime="20240705 12:50:23.492"/>
</kw>
<kw name="Gateway IPv4 input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_GATEWAY_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=Gateway IPv4 input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.597" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:23.494" endtime="20240705 12:50:23.597"/>
</kw>
<status status="PASS" starttime="20240705 12:50:23.494" endtime="20240705 12:50:23.598"/>
</kw>
<kw name="Select IPv4 configuration type &quot;PPPoE&quot;" library="wan" sourcename="Select IPv4 configuration type &quot;${text}&quot;">
<kw name="Open IPv4 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.668" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:23.668" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:23.601" endtime="20240705 12:50:23.668"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:23.669" endtime="20240705 12:50:23.746"/>
</kw>
<status status="PASS" starttime="20240705 12:50:23.668" endtime="20240705 12:50:23.747"/>
</branch>
<status status="PASS" starttime="20240705 12:50:23.668" endtime="20240705 12:50:23.747"/>
</if>
<status status="PASS" starttime="20240705 12:50:23.600" endtime="20240705 12:50:23.748"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv4_elem_list}</var>
<arg>css=[data-testid="ipv4-config-mode-select-ul"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.769" level="INFO">Found Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2 Locators successfully.</msg>
<msg timestamp="20240705 12:50:23.770" level="INFO">${ipv4_elem_list} = ['css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2']</msg>
<status status="PASS" starttime="20240705 12:50:23.749" endtime="20240705 12:50:23.770"/>
</kw>
<for flavor="IN">
<var>${ipv4_elem}</var>
<value>@{ipv4_elem_list}</value>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.814" level="INFO">Text: 'IP Estático'</msg>
<msg timestamp="20240705 12:50:23.815" level="INFO">${ipv4_text} = IP Estático</msg>
<status status="PASS" starttime="20240705 12:50:23.772" endtime="20240705 12:50:23.815"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:23.816" endtime="20240705 12:50:23.816"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:23.817" endtime="20240705 12:50:23.817"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:23.817" endtime="20240705 12:50:23.817"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:23.815" endtime="20240705 12:50:23.818"/>
</branch>
<status status="PASS" starttime="20240705 12:50:23.815" endtime="20240705 12:50:23.818"/>
</if>
<status status="PASS" starttime="20240705 12:50:23.771" endtime="20240705 12:50:23.818"/>
</iter>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.873" level="INFO">Text: 'Cliente DHCP'</msg>
<msg timestamp="20240705 12:50:23.873" level="INFO">${ipv4_text} = Cliente DHCP</msg>
<status status="PASS" starttime="20240705 12:50:23.819" endtime="20240705 12:50:23.873"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:23.874" endtime="20240705 12:50:23.874"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:23.874" endtime="20240705 12:50:23.874"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:23.874" endtime="20240705 12:50:23.874"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:23.873" endtime="20240705 12:50:23.874"/>
</branch>
<status status="PASS" starttime="20240705 12:50:23.873" endtime="20240705 12:50:23.875"/>
</if>
<status status="PASS" starttime="20240705 12:50:23.818" endtime="20240705 12:50:23.875"/>
</iter>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:23.918" level="INFO">Text: 'PPPoE'</msg>
<msg timestamp="20240705 12:50:23.918" level="INFO">${ipv4_text} = PPPoE</msg>
<status status="PASS" starttime="20240705 12:50:23.876" endtime="20240705 12:50:23.918"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:23.919" endtime="20240705 12:50:23.999"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.060" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:23.999" endtime="20240705 12:50:24.060"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:24.060" endtime="20240705 12:50:24.060"/>
</return>
<status status="PASS" starttime="20240705 12:50:23.919" endtime="20240705 12:50:24.061"/>
</branch>
<status status="PASS" starttime="20240705 12:50:23.919" endtime="20240705 12:50:24.061"/>
</if>
<status status="PASS" starttime="20240705 12:50:23.875" endtime="20240705 12:50:24.061"/>
</iter>
<status status="PASS" starttime="20240705 12:50:23.770" endtime="20240705 12:50:24.061"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv4 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:24.062" endtime="20240705 12:50:24.062"/>
</kw>
<status status="PASS" starttime="20240705 12:50:23.599" endtime="20240705 12:50:24.062"/>
</kw>
<kw name="MPPE toggle text should be &quot;MPPE&quot;" library="wan" sourcename="MPPE toggle text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_MPPE_TOGGLE_TEXT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.123" level="INFO">Text: 'MPPE'</msg>
<status status="PASS" starttime="20240705 12:50:24.064" endtime="20240705 12:50:24.124"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.063" endtime="20240705 12:50:24.124"/>
</kw>
<kw name="MPPE toggle should be disabled" library="wan">
<kw name="Get Element States" library="Browser">
<var>${element_states}</var>
<arg>${NETWORK_WAN_PAGE_MPPE_TOGGLE}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.269" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused', 'unchecked']</msg>
<msg timestamp="20240705 12:50:24.270" level="INFO">${element_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused', 'unchecked']</msg>
<status status="PASS" starttime="20240705 12:50:24.125" endtime="20240705 12:50:24.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${element_states}</arg>
<arg>unchecked</arg>
<arg>MPPE toggle should be disabled (editable).</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240705 12:50:24.270" endtime="20240705 12:50:24.273"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.124" endtime="20240705 12:50:24.273"/>
</kw>
<kw name="Service name input title should be &quot;Nome do serviço&quot;" library="wan" sourcename="Service name input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_SERVICE_NAME_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.322" level="INFO">Text: 'Nome do serviço'</msg>
<status status="PASS" starttime="20240705 12:50:24.275" endtime="20240705 12:50:24.322"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.274" endtime="20240705 12:50:24.323"/>
</kw>
<kw name="Service name input text should be &quot;&quot;" library="wan" sourcename="Service name input text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_SERVICE_NAME_INPUT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.366" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20240705 12:50:24.324" endtime="20240705 12:50:24.366"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.323" endtime="20240705 12:50:24.367"/>
</kw>
<kw name="Service name input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_SERVICE_NAME_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=Service name input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.476" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:24.369" endtime="20240705 12:50:24.476"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.368" endtime="20240705 12:50:24.477"/>
</kw>
<kw name="User input title should be &quot;Usuário&quot;" library="wan" sourcename="User input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_USER_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.535" level="INFO">Text: 'Usuário'</msg>
<status status="PASS" starttime="20240705 12:50:24.479" endtime="20240705 12:50:24.535"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.478" endtime="20240705 12:50:24.536"/>
</kw>
<kw name="User input text should be &quot;&quot;" library="wan" sourcename="User input text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_USER_INPUT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.607" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20240705 12:50:24.537" endtime="20240705 12:50:24.607"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.536" endtime="20240705 12:50:24.607"/>
</kw>
<kw name="User input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_USER_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=User input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.697" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:24.608" endtime="20240705 12:50:24.697"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.607" endtime="20240705 12:50:24.698"/>
</kw>
<kw name="Password input title should be &quot;Senha&quot;" library="wan" sourcename="Password input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_PASSWORD_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.840" level="INFO">Text: 'Senha'</msg>
<status status="PASS" starttime="20240705 12:50:24.704" endtime="20240705 12:50:24.840"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.698" endtime="20240705 12:50:24.840"/>
</kw>
<kw name="Password input text should be &quot;&quot;" library="wan" sourcename="Password input text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_PASSWORD_INPUT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:24.916" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20240705 12:50:24.841" endtime="20240705 12:50:24.916"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.841" endtime="20240705 12:50:24.917"/>
</kw>
<kw name="Password input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_PASSWORD_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=Password input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.026" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:24.919" endtime="20240705 12:50:25.026"/>
</kw>
<status status="PASS" starttime="20240705 12:50:24.918" endtime="20240705 12:50:25.027"/>
</kw>
<kw name="Password revealer should be visible" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_PASSWORD_REVEALER}</arg>
<arg>contains</arg>
<arg>visible</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.102" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:25.029" endtime="20240705 12:50:25.102"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.028" endtime="20240705 12:50:25.102"/>
</kw>
<kw name="Clone MAC address toggle text should be &quot;Clonar endereço MAC&quot;" library="wan" sourcename="Clone MAC address toggle text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_CLONE_MAC_ADDRESS_TOGGLE_TEXT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.192" level="INFO">Text: 'Clonar endereço MAC'</msg>
<status status="PASS" starttime="20240705 12:50:25.105" endtime="20240705 12:50:25.192"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.104" endtime="20240705 12:50:25.193"/>
</kw>
<kw name="Clone MAC address toggle should be disabled" library="wan">
<kw name="Get Element States" library="Browser">
<var>${element_states}</var>
<arg>${NETWORK_WAN_PAGE_CLONE_MAC_ADDRESS_TOGGLE}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.270" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused', 'unchecked']</msg>
<msg timestamp="20240705 12:50:25.270" level="INFO">${element_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused', 'unchecked']</msg>
<status status="PASS" starttime="20240705 12:50:25.196" endtime="20240705 12:50:25.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${element_states}</arg>
<arg>unchecked</arg>
<arg>Clone MAC address toggle should be disabled (editable).</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240705 12:50:25.270" endtime="20240705 12:50:25.270"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.195" endtime="20240705 12:50:25.271"/>
</kw>
<kw name="MTU input title should be &quot;MTU&quot;" library="wan" sourcename="MTU input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_MTU_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.300" level="INFO">Text: 'MTU'</msg>
<status status="PASS" starttime="20240705 12:50:25.272" endtime="20240705 12:50:25.300"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.271" endtime="20240705 12:50:25.301"/>
</kw>
<kw name="MTU input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_MTU_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=MTU input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.385" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:25.302" endtime="20240705 12:50:25.385"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.301" endtime="20240705 12:50:25.385"/>
</kw>
<kw name="VLAN toggle text should be &quot;VLAN&quot;" library="wan" sourcename="VLAN toggle text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_VLAN_TOGGLE_TEXT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.482" level="INFO">Text: 'VLAN'</msg>
<status status="PASS" starttime="20240705 12:50:25.388" endtime="20240705 12:50:25.483"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.387" endtime="20240705 12:50:25.483"/>
</kw>
<kw name="VLAN toggle should be disabled" library="wan">
<kw name="Get Element States" library="Browser">
<var>${element_states}</var>
<arg>${NETWORK_WAN_PAGE_VLAN_TOGGLE}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.622" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused', 'unchecked']</msg>
<msg timestamp="20240705 12:50:25.622" level="INFO">${element_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused', 'unchecked']</msg>
<status status="PASS" starttime="20240705 12:50:25.491" endtime="20240705 12:50:25.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${element_states}</arg>
<arg>unchecked</arg>
<arg>VLAN toggle should be disabled (editable).</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240705 12:50:25.623" endtime="20240705 12:50:25.624"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.487" endtime="20240705 12:50:25.624"/>
</kw>
<kw name="Save settings button text WAN should be &quot;Salvar&quot;" library="wan" sourcename="Save settings button text WAN should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_SAVE_SETTINGS_BUTTON}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.722" level="INFO">Text: 'Salvar'</msg>
<status status="PASS" starttime="20240705 12:50:25.627" endtime="20240705 12:50:25.722"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.625" endtime="20240705 12:50:25.722"/>
</kw>
<kw name="No Operation" library="BuiltIn" type="TEARDOWN">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240705 12:50:25.723" endtime="20240705 12:50:25.723"/>
</kw>
<tag>lang-pt</tag>
<tag>network</tag>
<tag>robot:continue-on-failure</tag>
<tag>smoke</tag>
<tag>wan</tag>
<tag>wip</tag>
<status status="PASS" starttime="20240705 12:50:20.900" endtime="20240705 12:50:25.724"/>
</test>
<test id="s1-s1-s1-s1-s1-s1-t4" name="Validation of hidden elements on the WAN page (ipv4)" line="94">
<kw name="Enable MAC address toggle" library="wan">
<kw name="Get Checkbox State" library="Browser">
<var>${checked}</var>
<arg>${NETWORK_WAN_PAGE_CLONE_MAC_ADDRESS_TOGGLE}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the state of the checkbox found by ``selector``.</doc>
<msg timestamp="20240705 12:50:25.821" level="INFO">Retrieved dom property for element data-testid=ipv4-clone-mac-address-toggle containing false</msg>
<msg timestamp="20240705 12:50:25.821" level="INFO">Checkbox is unchecked</msg>
<msg timestamp="20240705 12:50:25.822" level="INFO">${checked} = False</msg>
<status status="PASS" starttime="20240705 12:50:25.770" endtime="20240705 12:50:25.822"/>
</kw>
<if>
<branch type="IF" condition="${checked} == ${false}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_CLONE_MAC_ADDRESS_TOGGLE_CLICKABLE}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:25.825" endtime="20240705 12:50:25.929"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.823" endtime="20240705 12:50:25.929"/>
</branch>
<status status="PASS" starttime="20240705 12:50:25.822" endtime="20240705 12:50:25.929"/>
</if>
<kw name="Wait For Elements State" library="Browser">
<arg>${NETWORK_WAN_PAGE_CLONE_MAC_ADDRESS_TOGGLE}</arg>
<arg>checked</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240705 12:50:25.959" level="INFO">Wait For Function completed successfully.</msg>
<status status="PASS" starttime="20240705 12:50:25.930" endtime="20240705 12:50:25.959"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.769" endtime="20240705 12:50:25.960"/>
</kw>
<kw name="MAC address input title should be &quot;Endereço MAC&quot;" library="wan" sourcename="MAC address input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_MAC_ADDRESS_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.041" level="INFO">Text: 'Endereço MAC'</msg>
<status status="PASS" starttime="20240705 12:50:25.963" endtime="20240705 12:50:26.041"/>
</kw>
<status status="PASS" starttime="20240705 12:50:25.962" endtime="20240705 12:50:26.041"/>
</kw>
<kw name="Value of the MAC address should be" library="wan">
<arg>[a-zA-Z0-9_]+</arg>
<kw name="Get Text" library="Browser">
<var>${mac_value}</var>
<arg>${NETWORK_WAN_PAGE_MAC_ADDRESS_INPUT}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.080" level="INFO">Text: 'd8:36:5f:eb:4b:65'</msg>
<msg timestamp="20240705 12:50:26.080" level="INFO">${mac_value} = d8:36:5f:eb:4b:65</msg>
<status status="PASS" starttime="20240705 12:50:26.043" endtime="20240705 12:50:26.080"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${mac_value}</arg>
<arg>${expected_pattern}</arg>
<arg>msg=MAC address value does not match expected pattern</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240705 12:50:26.081" endtime="20240705 12:50:26.088"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>MAC: ${mac_value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240705 12:50:26.088" endtime="20240705 12:50:26.090"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.042" endtime="20240705 12:50:26.091"/>
</kw>
<kw name="MAC address input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_MAC_ADDRESS_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=MAC address input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.259" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:26.092" endtime="20240705 12:50:26.259"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.091" endtime="20240705 12:50:26.259"/>
</kw>
<kw name="Enable VLAN toggle" library="wan">
<kw name="Get Checkbox State" library="Browser">
<var>${checked}</var>
<arg>${NETWORK_WAN_PAGE_VLAN_TOGGLE}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the state of the checkbox found by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.311" level="INFO">Retrieved dom property for element data-testid=ipv4-vlan-toggle containing false</msg>
<msg timestamp="20240705 12:50:26.311" level="INFO">Checkbox is unchecked</msg>
<msg timestamp="20240705 12:50:26.311" level="INFO">${checked} = False</msg>
<status status="PASS" starttime="20240705 12:50:26.260" endtime="20240705 12:50:26.312"/>
</kw>
<if>
<branch type="IF" condition="${checked} == ${false}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_VLAN_TOGGLE_CLICKABLE}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:26.312" endtime="20240705 12:50:26.379"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.312" endtime="20240705 12:50:26.379"/>
</branch>
<status status="PASS" starttime="20240705 12:50:26.312" endtime="20240705 12:50:26.379"/>
</if>
<kw name="Wait For Elements State" library="Browser">
<arg>${NETWORK_WAN_PAGE_VLAN_TOGGLE}</arg>
<arg>checked</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240705 12:50:26.422" level="INFO">Wait For Function completed successfully.</msg>
<status status="PASS" starttime="20240705 12:50:26.380" endtime="20240705 12:50:26.422"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.260" endtime="20240705 12:50:26.423"/>
</kw>
<kw name="VLAN input title should be &quot;VLAN ID&quot;" library="wan" sourcename="VLAN input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_VLAN_ID_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.497" level="INFO">Text: 'VLAN ID'</msg>
<status status="PASS" starttime="20240705 12:50:26.424" endtime="20240705 12:50:26.497"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.423" endtime="20240705 12:50:26.498"/>
</kw>
<kw name="VLAN input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_VLAN_ID_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=VLAN input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.579" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:26.499" endtime="20240705 12:50:26.579"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.498" endtime="20240705 12:50:26.579"/>
</kw>
<kw name="No Operation" library="BuiltIn" type="TEARDOWN">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240705 12:50:26.580" endtime="20240705 12:50:26.580"/>
</kw>
<tag>lang-pt</tag>
<tag>network</tag>
<tag>robot:continue-on-failure</tag>
<tag>smoke</tag>
<tag>wan</tag>
<tag>wip</tag>
<status status="PASS" starttime="20240705 12:50:25.758" endtime="20240705 12:50:26.581"/>
</test>
<test id="s1-s1-s1-s1-s1-s1-t5" name="Three network WAN (IPv4) configuration types are available: Static IP, DHCP client &amp; PPPoE" line="107">
<kw name="There should be &quot;3&quot; IPv4 configuration type available" library="wan" sourcename="There should be &quot;${number}&quot; IPv4 configuration type available">
<kw name="Open IPv4 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.689" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:26.689" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:26.634" endtime="20240705 12:50:26.689"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:26.690" endtime="20240705 12:50:26.817"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.689" endtime="20240705 12:50:26.818"/>
</branch>
<status status="PASS" starttime="20240705 12:50:26.689" endtime="20240705 12:50:26.818"/>
</if>
<status status="PASS" starttime="20240705 12:50:26.633" endtime="20240705 12:50:26.818"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv4_elem_list}</var>
<arg>css=[data-testid="ipv4-config-mode-select-ul"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.853" level="INFO">Found Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2 Locators successfully.</msg>
<msg timestamp="20240705 12:50:26.854" level="INFO">${ipv4_elem_list} = ['css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2']</msg>
<status status="PASS" starttime="20240705 12:50:26.818" endtime="20240705 12:50:26.854"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_length}</var>
<arg>${ipv4_elem_list}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240705 12:50:26.855" level="INFO">Length is 3</msg>
<msg timestamp="20240705 12:50:26.856" level="INFO">${list_length} = 3</msg>
<status status="PASS" starttime="20240705 12:50:26.855" endtime="20240705 12:50:26.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${list_length}</arg>
<arg>${number}</arg>
<arg>msg=There should be ${number} IPv4 configuration type available, but there was ${list_length}.</arg>
<arg>values=${false}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240705 12:50:26.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240705 12:50:26.856" endtime="20240705 12:50:26.857"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.631" endtime="20240705 12:50:26.857"/>
</kw>
<kw name="IPv4 configuration type &quot;IP Estático&quot; should be available" library="wan" sourcename="IPv4 configuration type &quot;${text}&quot; should be available">
<kw name="Select IPv4 configuration type &quot;${text}&quot;" library="wan" sourcename="Select IPv4 configuration type &quot;${text}&quot;">
<kw name="Open IPv4 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.932" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:26.932" level="INFO">${elem_states} = ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:26.862" endtime="20240705 12:50:26.932"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:26.934" endtime="20240705 12:50:26.934"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:26.933" endtime="20240705 12:50:26.934"/>
</branch>
<status status="PASS" starttime="20240705 12:50:26.933" endtime="20240705 12:50:26.934"/>
</if>
<status status="PASS" starttime="20240705 12:50:26.862" endtime="20240705 12:50:26.935"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv4_elem_list}</var>
<arg>css=[data-testid="ipv4-config-mode-select-ul"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:26.964" level="INFO">Found Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2 Locators successfully.</msg>
<msg timestamp="20240705 12:50:26.965" level="INFO">${ipv4_elem_list} = ['css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2']</msg>
<status status="PASS" starttime="20240705 12:50:26.935" endtime="20240705 12:50:26.965"/>
</kw>
<for flavor="IN">
<var>${ipv4_elem}</var>
<value>@{ipv4_elem_list}</value>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.007" level="INFO">Text: 'IP Estático'</msg>
<msg timestamp="20240705 12:50:27.007" level="INFO">${ipv4_text} = IP Estático</msg>
<status status="PASS" starttime="20240705 12:50:26.967" endtime="20240705 12:50:27.007"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:27.008" endtime="20240705 12:50:27.096"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.159" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:27.097" endtime="20240705 12:50:27.159"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:27.159" endtime="20240705 12:50:27.159"/>
</return>
<status status="PASS" starttime="20240705 12:50:27.007" endtime="20240705 12:50:27.159"/>
</branch>
<status status="PASS" starttime="20240705 12:50:27.007" endtime="20240705 12:50:27.160"/>
</if>
<status status="PASS" starttime="20240705 12:50:26.967" endtime="20240705 12:50:27.160"/>
</iter>
<status status="PASS" starttime="20240705 12:50:26.966" endtime="20240705 12:50:27.160"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv4 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:27.161" endtime="20240705 12:50:27.161"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.860" endtime="20240705 12:50:27.162"/>
</kw>
<status status="PASS" starttime="20240705 12:50:26.858" endtime="20240705 12:50:27.162"/>
</kw>
<kw name="IPv4 configuration type &quot;Cliente DHCP&quot; should be available" library="wan" sourcename="IPv4 configuration type &quot;${text}&quot; should be available">
<kw name="Select IPv4 configuration type &quot;${text}&quot;" library="wan" sourcename="Select IPv4 configuration type &quot;${text}&quot;">
<kw name="Open IPv4 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.273" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:27.275" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:27.165" endtime="20240705 12:50:27.275"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:27.279" endtime="20240705 12:50:27.373"/>
</kw>
<status status="PASS" starttime="20240705 12:50:27.278" endtime="20240705 12:50:27.373"/>
</branch>
<status status="PASS" starttime="20240705 12:50:27.277" endtime="20240705 12:50:27.373"/>
</if>
<status status="PASS" starttime="20240705 12:50:27.164" endtime="20240705 12:50:27.373"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv4_elem_list}</var>
<arg>css=[data-testid="ipv4-config-mode-select-ul"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.397" level="INFO">Found Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2 Locators successfully.</msg>
<msg timestamp="20240705 12:50:27.398" level="INFO">${ipv4_elem_list} = ['css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2']</msg>
<status status="PASS" starttime="20240705 12:50:27.374" endtime="20240705 12:50:27.398"/>
</kw>
<for flavor="IN">
<var>${ipv4_elem}</var>
<value>@{ipv4_elem_list}</value>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.446" level="INFO">Text: 'IP Estático'</msg>
<msg timestamp="20240705 12:50:27.446" level="INFO">${ipv4_text} = IP Estático</msg>
<status status="PASS" starttime="20240705 12:50:27.399" endtime="20240705 12:50:27.446"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:27.447" endtime="20240705 12:50:27.448"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:27.448" endtime="20240705 12:50:27.450"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:27.450" endtime="20240705 12:50:27.450"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:27.447" endtime="20240705 12:50:27.451"/>
</branch>
<status status="PASS" starttime="20240705 12:50:27.447" endtime="20240705 12:50:27.451"/>
</if>
<status status="PASS" starttime="20240705 12:50:27.399" endtime="20240705 12:50:27.452"/>
</iter>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.507" level="INFO">Text: 'Cliente DHCP'</msg>
<msg timestamp="20240705 12:50:27.507" level="INFO">${ipv4_text} = Cliente DHCP</msg>
<status status="PASS" starttime="20240705 12:50:27.454" endtime="20240705 12:50:27.507"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:27.509" endtime="20240705 12:50:27.605"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.663" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:27.605" endtime="20240705 12:50:27.664"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:27.664" endtime="20240705 12:50:27.664"/>
</return>
<status status="PASS" starttime="20240705 12:50:27.508" endtime="20240705 12:50:27.664"/>
</branch>
<status status="PASS" starttime="20240705 12:50:27.508" endtime="20240705 12:50:27.664"/>
</if>
<status status="PASS" starttime="20240705 12:50:27.453" endtime="20240705 12:50:27.664"/>
</iter>
<status status="PASS" starttime="20240705 12:50:27.398" endtime="20240705 12:50:27.665"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv4 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:27.666" endtime="20240705 12:50:27.666"/>
</kw>
<status status="PASS" starttime="20240705 12:50:27.163" endtime="20240705 12:50:27.666"/>
</kw>
<status status="PASS" starttime="20240705 12:50:27.163" endtime="20240705 12:50:27.666"/>
</kw>
<kw name="IPv4 configuration type &quot;PPPoE&quot; should be available" library="wan" sourcename="IPv4 configuration type &quot;${text}&quot; should be available">
<kw name="Select IPv4 configuration type &quot;${text}&quot;" library="wan" sourcename="Select IPv4 configuration type &quot;${text}&quot;">
<kw name="Open IPv4 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.780" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:27.780" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:27.680" endtime="20240705 12:50:27.780"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV4_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:27.781" endtime="20240705 12:50:27.895"/>
</kw>
<status status="PASS" starttime="20240705 12:50:27.780" endtime="20240705 12:50:27.896"/>
</branch>
<status status="PASS" starttime="20240705 12:50:27.780" endtime="20240705 12:50:27.896"/>
</if>
<status status="PASS" starttime="20240705 12:50:27.672" endtime="20240705 12:50:27.897"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv4_elem_list}</var>
<arg>css=[data-testid="ipv4-config-mode-select-ul"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.917" level="INFO">Found Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2 Locators successfully.</msg>
<msg timestamp="20240705 12:50:27.918" level="INFO">${ipv4_elem_list} = ['css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1', 'css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2']</msg>
<status status="PASS" starttime="20240705 12:50:27.898" endtime="20240705 12:50:27.918"/>
</kw>
<for flavor="IN">
<var>${ipv4_elem}</var>
<value>@{ipv4_elem_list}</value>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:27.969" level="INFO">Text: 'IP Estático'</msg>
<msg timestamp="20240705 12:50:27.969" level="INFO">${ipv4_text} = IP Estático</msg>
<status status="PASS" starttime="20240705 12:50:27.919" endtime="20240705 12:50:27.969"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:27.970" endtime="20240705 12:50:27.970"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:27.970" endtime="20240705 12:50:27.970"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:27.971" endtime="20240705 12:50:27.971"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:27.969" endtime="20240705 12:50:27.971"/>
</branch>
<status status="PASS" starttime="20240705 12:50:27.969" endtime="20240705 12:50:27.971"/>
</if>
<status status="PASS" starttime="20240705 12:50:27.919" endtime="20240705 12:50:27.971"/>
</iter>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=1</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.032" level="INFO">Text: 'Cliente DHCP'</msg>
<msg timestamp="20240705 12:50:28.032" level="INFO">${ipv4_text} = Cliente DHCP</msg>
<status status="PASS" starttime="20240705 12:50:27.972" endtime="20240705 12:50:28.032"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:28.033" endtime="20240705 12:50:28.034"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:28.034" endtime="20240705 12:50:28.034"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:28.034" endtime="20240705 12:50:28.034"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:28.033" endtime="20240705 12:50:28.037"/>
</branch>
<status status="PASS" starttime="20240705 12:50:28.032" endtime="20240705 12:50:28.038"/>
</if>
<status status="PASS" starttime="20240705 12:50:27.971" endtime="20240705 12:50:28.039"/>
</iter>
<iter>
<var name="${ipv4_elem}">css=[data-testid="ipv4-config-mode-select-ul"] li &gt;&gt; nth=2</var>
<kw name="Get Text" library="Browser">
<var>${ipv4_text}</var>
<arg>${ipv4_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.072" level="INFO">Text: 'PPPoE'</msg>
<msg timestamp="20240705 12:50:28.072" level="INFO">${ipv4_text} = PPPoE</msg>
<status status="PASS" starttime="20240705 12:50:28.041" endtime="20240705 12:50:28.072"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv4_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv4_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:28.073" endtime="20240705 12:50:28.144"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv4 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.204" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:28.144" endtime="20240705 12:50:28.205"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:28.205" endtime="20240705 12:50:28.205"/>
</return>
<status status="PASS" starttime="20240705 12:50:28.073" endtime="20240705 12:50:28.205"/>
</branch>
<status status="PASS" starttime="20240705 12:50:28.072" endtime="20240705 12:50:28.205"/>
</if>
<status status="PASS" starttime="20240705 12:50:28.040" endtime="20240705 12:50:28.205"/>
</iter>
<status status="PASS" starttime="20240705 12:50:27.918" endtime="20240705 12:50:28.206"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv4 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:28.206" endtime="20240705 12:50:28.206"/>
</kw>
<status status="PASS" starttime="20240705 12:50:27.671" endtime="20240705 12:50:28.206"/>
</kw>
<status status="PASS" starttime="20240705 12:50:27.667" endtime="20240705 12:50:28.206"/>
</kw>
<kw name="No Operation" library="BuiltIn" type="TEARDOWN">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240705 12:50:28.207" endtime="20240705 12:50:28.207"/>
</kw>
<tag>lang-pt</tag>
<tag>network</tag>
<tag>robot:continue-on-failure</tag>
<tag>smoke</tag>
<tag>wan</tag>
<tag>wip</tag>
<status status="PASS" starttime="20240705 12:50:26.621" endtime="20240705 12:50:28.208"/>
</test>
<test id="s1-s1-s1-s1-s1-s1-t6" name="Factory default IPv6 settings WAN are correct" line="115">
<kw name="Open IPv6 settings" library="wan">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_SETTINGS_BUTTON}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:28.258" endtime="20240705 12:50:28.385"/>
</kw>
<status status="PASS" starttime="20240705 12:50:28.257" endtime="20240705 12:50:28.385"/>
</kw>
<kw name="Link local title should be &quot;Link-local:&quot;" library="wan" sourcename="Link local title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_LINK_LOCAL_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.481" level="INFO">Text: 'Link-local:'</msg>
<status status="PASS" starttime="20240705 12:50:28.387" endtime="20240705 12:50:28.481"/>
</kw>
<status status="PASS" starttime="20240705 12:50:28.386" endtime="20240705 12:50:28.481"/>
</kw>
<kw name="Link local text should be &quot;Salve e aplique as alterações para que o link local apareça.&quot;" library="wan" sourcename="Link local text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_LINK_LOCAL}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.556" level="INFO">Text: 'Salve e aplique as alterações para que o link local apareça.'</msg>
<status status="PASS" starttime="20240705 12:50:28.483" endtime="20240705 12:50:28.556"/>
</kw>
<status status="PASS" starttime="20240705 12:50:28.483" endtime="20240705 12:50:28.556"/>
</kw>
<kw name="IPv6 configuration type select title should be &quot;Tipo de configuração&quot;" library="wan" sourcename="IPv6 configuration type select title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.607" level="INFO">Text: 'Tipo de configuração'</msg>
<status status="PASS" starttime="20240705 12:50:28.557" endtime="20240705 12:50:28.607"/>
</kw>
<status status="PASS" starttime="20240705 12:50:28.557" endtime="20240705 12:50:28.607"/>
</kw>
<kw name="IPv6 configuration type select option should be &quot;Automático&quot;" library="wan" sourcename="IPv6 configuration type select option should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.694" level="INFO">Text: 'Automático'</msg>
<status status="PASS" starttime="20240705 12:50:28.610" endtime="20240705 12:50:28.694"/>
</kw>
<status status="PASS" starttime="20240705 12:50:28.608" endtime="20240705 12:50:28.694"/>
</kw>
<kw name="Select IPv6 configuration type &quot;Manual&quot;" library="wan" sourcename="Select IPv6 configuration type &quot;${text}&quot;">
<kw name="Open IPv6 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.794" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:28.794" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:28.698" endtime="20240705 12:50:28.794"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:28.795" endtime="20240705 12:50:28.873"/>
</kw>
<status status="PASS" starttime="20240705 12:50:28.795" endtime="20240705 12:50:28.874"/>
</branch>
<status status="PASS" starttime="20240705 12:50:28.795" endtime="20240705 12:50:28.874"/>
</if>
<status status="PASS" starttime="20240705 12:50:28.697" endtime="20240705 12:50:28.874"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv6_elem_list}</var>
<arg>css=[data-testid="ipv6-config-mode-select"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.888" level="INFO">Found Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=3 Locators successfully.</msg>
<msg timestamp="20240705 12:50:28.889" level="INFO">${ipv6_elem_list} = ['css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2', 'css=[data-testid="ipv...</msg>
<status status="PASS" starttime="20240705 12:50:28.875" endtime="20240705 12:50:28.890"/>
</kw>
<for flavor="IN">
<var>${ipv6_elem}</var>
<value>@{ipv6_elem_list}</value>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.915" level="INFO">Text: 'Desativado'</msg>
<msg timestamp="20240705 12:50:28.915" level="INFO">${ipv6_text} = Desativado</msg>
<status status="PASS" starttime="20240705 12:50:28.891" endtime="20240705 12:50:28.915"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:28.916" endtime="20240705 12:50:28.916"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:28.917" endtime="20240705 12:50:28.917"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:28.917" endtime="20240705 12:50:28.917"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:28.915" endtime="20240705 12:50:28.918"/>
</branch>
<status status="PASS" starttime="20240705 12:50:28.915" endtime="20240705 12:50:28.918"/>
</if>
<status status="PASS" starttime="20240705 12:50:28.890" endtime="20240705 12:50:28.918"/>
</iter>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:28.957" level="INFO">Text: 'Manual'</msg>
<msg timestamp="20240705 12:50:28.957" level="INFO">${ipv6_text} = Manual</msg>
<status status="PASS" starttime="20240705 12:50:28.919" endtime="20240705 12:50:28.957"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:28.958" endtime="20240705 12:50:29.064"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.320" level="INFO">States are: ['detached']</msg>
<status status="PASS" starttime="20240705 12:50:29.065" endtime="20240705 12:50:29.320"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:29.320" endtime="20240705 12:50:29.321"/>
</return>
<status status="PASS" starttime="20240705 12:50:28.958" endtime="20240705 12:50:29.321"/>
</branch>
<status status="PASS" starttime="20240705 12:50:28.958" endtime="20240705 12:50:29.321"/>
</if>
<status status="PASS" starttime="20240705 12:50:28.918" endtime="20240705 12:50:29.321"/>
</iter>
<status status="PASS" starttime="20240705 12:50:28.890" endtime="20240705 12:50:29.322"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv6 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:29.322" endtime="20240705 12:50:29.322"/>
</kw>
<status status="PASS" starttime="20240705 12:50:28.695" endtime="20240705 12:50:29.323"/>
</kw>
<kw name="IPv6 address input title should be &quot;Endereço IPv6&quot;" library="wan" sourcename="IPv6 address input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_ADDRESS_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.381" level="INFO">Text: 'Endereço IPv6'</msg>
<status status="PASS" starttime="20240705 12:50:29.324" endtime="20240705 12:50:29.381"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.323" endtime="20240705 12:50:29.381"/>
</kw>
<kw name="IPv6 address input text should be &quot;&quot;" library="wan" sourcename="IPv6 address input text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_ADDRESS_INPUT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.422" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20240705 12:50:29.382" endtime="20240705 12:50:29.422"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.382" endtime="20240705 12:50:29.423"/>
</kw>
<kw name="IPv6 address input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_ADDRESS_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=IPv6 address input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.504" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:29.424" endtime="20240705 12:50:29.505"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.423" endtime="20240705 12:50:29.505"/>
</kw>
<kw name="Prefix length input title should be &quot;Tamanho do prefixo&quot;" library="wan" sourcename="Prefix length input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_PREFIX_LENGTH_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.569" level="INFO">Text: 'Tamanho do prefixo'</msg>
<status status="PASS" starttime="20240705 12:50:29.506" endtime="20240705 12:50:29.569"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.505" endtime="20240705 12:50:29.569"/>
</kw>
<kw name="Prefix length input text should be &quot;&quot;" library="wan" sourcename="Prefix length input text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_PREFIX_LENGTH_INPUT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.635" level="INFO">Text: ''</msg>
<status status="PASS" starttime="20240705 12:50:29.571" endtime="20240705 12:50:29.635"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.570" endtime="20240705 12:50:29.636"/>
</kw>
<kw name="Prefix length input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_PREFIX_LENGTH_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=Prefix length input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.721" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:29.637" endtime="20240705 12:50:29.721"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.636" endtime="20240705 12:50:29.721"/>
</kw>
<kw name="Gateway IPv6 input title should be &quot;Gateway&quot;" library="wan" sourcename="Gateway IPv6 input title should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_GATEWAY_INPUT_TITLE}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.788" level="INFO">Text: 'Gateway'</msg>
<status status="PASS" starttime="20240705 12:50:29.722" endtime="20240705 12:50:29.788"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.722" endtime="20240705 12:50:29.788"/>
</kw>
<kw name="Gateway IPv6 input text should be &quot;::&quot;" library="wan" sourcename="Gateway IPv6 input text should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_GATEWAY_INPUT}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.838" level="INFO">Text: '::'</msg>
<status status="PASS" starttime="20240705 12:50:29.790" endtime="20240705 12:50:29.838"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.789" endtime="20240705 12:50:29.839"/>
</kw>
<kw name="Gateway IPv6 input should be enabled" library="wan">
<kw name="Get Element States" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_GATEWAY_INPUT}</arg>
<arg>contains</arg>
<arg>enabled</arg>
<arg>message=Gateway IPv6 input should be enabled (editable).</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.927" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:29.840" endtime="20240705 12:50:29.928"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.839" endtime="20240705 12:50:29.928"/>
</kw>
<kw name="Save settings button text WAN should be &quot;Salvar&quot;" library="wan" sourcename="Save settings button text WAN should be &quot;${text}&quot;">
<kw name="Get Text" library="Browser">
<arg>${NETWORK_WAN_PAGE_SAVE_SETTINGS_BUTTON}</arg>
<arg>==</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:29.975" level="INFO">Text: 'Salvar'</msg>
<status status="PASS" starttime="20240705 12:50:29.930" endtime="20240705 12:50:29.975"/>
</kw>
<status status="PASS" starttime="20240705 12:50:29.929" endtime="20240705 12:50:29.976"/>
</kw>
<kw name="No Operation" library="BuiltIn" type="TEARDOWN">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240705 12:50:29.976" endtime="20240705 12:50:29.977"/>
</kw>
<tag>lang-pt</tag>
<tag>network</tag>
<tag>robot:continue-on-failure</tag>
<tag>smoke</tag>
<tag>wan</tag>
<tag>wip</tag>
<status status="PASS" starttime="20240705 12:50:28.226" endtime="20240705 12:50:29.977"/>
</test>
<test id="s1-s1-s1-s1-s1-s1-t7" name="Four network WAN (IPv6) configuration types are available: Disabled, Manual, Automatic &amp; Link-local" line="142">
<kw name="There should be &quot;4&quot; IPv6 configuration type available" library="wan" sourcename="There should be &quot;${number}&quot; IPv6 configuration type available">
<kw name="Open IPv6 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:30.114" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:30.116" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:30.026" endtime="20240705 12:50:30.116"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:30.117" endtime="20240705 12:50:30.189"/>
</kw>
<status status="PASS" starttime="20240705 12:50:30.117" endtime="20240705 12:50:30.189"/>
</branch>
<status status="PASS" starttime="20240705 12:50:30.116" endtime="20240705 12:50:30.189"/>
</if>
<status status="PASS" starttime="20240705 12:50:30.025" endtime="20240705 12:50:30.190"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv6_elem_list}</var>
<arg>css=[data-testid="ipv6-config-mode-select"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:30.211" level="INFO">Found Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=3 Locators successfully.</msg>
<msg timestamp="20240705 12:50:30.211" level="INFO">${ipv6_elem_list} = ['css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2', 'css=[data-testid="ipv...</msg>
<status status="PASS" starttime="20240705 12:50:30.190" endtime="20240705 12:50:30.211"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_length}</var>
<arg>${ipv6_elem_list}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240705 12:50:30.212" level="INFO">Length is 4</msg>
<msg timestamp="20240705 12:50:30.213" level="INFO">${list_length} = 4</msg>
<status status="PASS" starttime="20240705 12:50:30.212" endtime="20240705 12:50:30.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${list_length}</arg>
<arg>${number}</arg>
<arg>msg=There should be ${number} IPv6 configuration type available, but there was ${list_length}.</arg>
<arg>values=${false}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240705 12:50:30.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240705 12:50:30.213" endtime="20240705 12:50:30.217"/>
</kw>
<status status="PASS" starttime="20240705 12:50:30.024" endtime="20240705 12:50:30.217"/>
</kw>
<kw name="IPv6 configuration type &quot;Desativado&quot; should be available" library="wan" sourcename="IPv6 configuration type &quot;${text}&quot; should be available">
<kw name="Select IPv6 configuration type &quot;${text}&quot;" library="wan" sourcename="Select IPv6 configuration type &quot;${text}&quot;">
<kw name="Open IPv6 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:30.309" level="INFO">States are: ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:30.310" level="INFO">${elem_states} = ['attached', 'visible', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:30.221" endtime="20240705 12:50:30.310"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:30.311" endtime="20240705 12:50:30.311"/>
</kw>
<status status="NOT RUN" starttime="20240705 12:50:30.310" endtime="20240705 12:50:30.311"/>
</branch>
<status status="PASS" starttime="20240705 12:50:30.310" endtime="20240705 12:50:30.312"/>
</if>
<status status="PASS" starttime="20240705 12:50:30.221" endtime="20240705 12:50:30.312"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv6_elem_list}</var>
<arg>css=[data-testid="ipv6-config-mode-select"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:30.332" level="INFO">Found Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=3 Locators successfully.</msg>
<msg timestamp="20240705 12:50:30.333" level="INFO">${ipv6_elem_list} = ['css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2', 'css=[data-testid="ipv...</msg>
<status status="PASS" starttime="20240705 12:50:30.312" endtime="20240705 12:50:30.333"/>
</kw>
<for flavor="IN">
<var>${ipv6_elem}</var>
<value>@{ipv6_elem_list}</value>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:30.369" level="INFO">Text: 'Desativado'</msg>
<msg timestamp="20240705 12:50:30.369" level="INFO">${ipv6_text} = Desativado</msg>
<status status="PASS" starttime="20240705 12:50:30.335" endtime="20240705 12:50:30.369"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:30.370" endtime="20240705 12:50:30.422"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:30.678" level="INFO">States are: ['detached']</msg>
<status status="PASS" starttime="20240705 12:50:30.423" endtime="20240705 12:50:30.679"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:30.679" endtime="20240705 12:50:30.680"/>
</return>
<status status="PASS" starttime="20240705 12:50:30.370" endtime="20240705 12:50:30.680"/>
</branch>
<status status="PASS" starttime="20240705 12:50:30.369" endtime="20240705 12:50:30.680"/>
</if>
<status status="PASS" starttime="20240705 12:50:30.334" endtime="20240705 12:50:30.680"/>
</iter>
<status status="PASS" starttime="20240705 12:50:30.334" endtime="20240705 12:50:30.680"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv6 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:30.681" endtime="20240705 12:50:30.681"/>
</kw>
<status status="PASS" starttime="20240705 12:50:30.219" endtime="20240705 12:50:30.681"/>
</kw>
<status status="PASS" starttime="20240705 12:50:30.218" endtime="20240705 12:50:30.682"/>
</kw>
<kw name="IPv6 configuration type &quot;Manual&quot; should be available" library="wan" sourcename="IPv6 configuration type &quot;${text}&quot; should be available">
<kw name="Select IPv6 configuration type &quot;${text}&quot;" library="wan" sourcename="Select IPv6 configuration type &quot;${text}&quot;">
<kw name="Open IPv6 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:30.802" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:30.802" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:30.685" endtime="20240705 12:50:30.802"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:30.804" endtime="20240705 12:50:30.908"/>
</kw>
<status status="PASS" starttime="20240705 12:50:30.803" endtime="20240705 12:50:30.908"/>
</branch>
<status status="PASS" starttime="20240705 12:50:30.803" endtime="20240705 12:50:30.908"/>
</if>
<status status="PASS" starttime="20240705 12:50:30.684" endtime="20240705 12:50:30.909"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv6_elem_list}</var>
<arg>css=[data-testid="ipv6-config-mode-select"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:30.932" level="INFO">Found Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=3 Locators successfully.</msg>
<msg timestamp="20240705 12:50:30.933" level="INFO">${ipv6_elem_list} = ['css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2', 'css=[data-testid="ipv...</msg>
<status status="PASS" starttime="20240705 12:50:30.909" endtime="20240705 12:50:30.933"/>
</kw>
<for flavor="IN">
<var>${ipv6_elem}</var>
<value>@{ipv6_elem_list}</value>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:30.971" level="INFO">Text: 'Desativado'</msg>
<msg timestamp="20240705 12:50:30.971" level="INFO">${ipv6_text} = Desativado</msg>
<status status="PASS" starttime="20240705 12:50:30.934" endtime="20240705 12:50:30.971"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:30.972" endtime="20240705 12:50:30.973"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:30.973" endtime="20240705 12:50:30.973"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:30.973" endtime="20240705 12:50:30.974"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:30.972" endtime="20240705 12:50:30.974"/>
</branch>
<status status="PASS" starttime="20240705 12:50:30.972" endtime="20240705 12:50:30.974"/>
</if>
<status status="PASS" starttime="20240705 12:50:30.934" endtime="20240705 12:50:30.974"/>
</iter>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:31.025" level="INFO">Text: 'Manual'</msg>
<msg timestamp="20240705 12:50:31.026" level="INFO">${ipv6_text} = Manual</msg>
<status status="PASS" starttime="20240705 12:50:30.975" endtime="20240705 12:50:31.026"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:31.027" endtime="20240705 12:50:31.130"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:31.386" level="INFO">States are: ['detached']</msg>
<status status="PASS" starttime="20240705 12:50:31.130" endtime="20240705 12:50:31.386"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:31.386" endtime="20240705 12:50:31.387"/>
</return>
<status status="PASS" starttime="20240705 12:50:31.026" endtime="20240705 12:50:31.387"/>
</branch>
<status status="PASS" starttime="20240705 12:50:31.026" endtime="20240705 12:50:31.387"/>
</if>
<status status="PASS" starttime="20240705 12:50:30.975" endtime="20240705 12:50:31.387"/>
</iter>
<status status="PASS" starttime="20240705 12:50:30.933" endtime="20240705 12:50:31.388"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv6 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:31.388" endtime="20240705 12:50:31.388"/>
</kw>
<status status="PASS" starttime="20240705 12:50:30.684" endtime="20240705 12:50:31.389"/>
</kw>
<status status="PASS" starttime="20240705 12:50:30.683" endtime="20240705 12:50:31.389"/>
</kw>
<kw name="IPv6 configuration type &quot;Automático&quot; should be available" library="wan" sourcename="IPv6 configuration type &quot;${text}&quot; should be available">
<kw name="Select IPv6 configuration type &quot;${text}&quot;" library="wan" sourcename="Select IPv6 configuration type &quot;${text}&quot;">
<kw name="Open IPv6 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:31.448" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:31.448" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:31.391" endtime="20240705 12:50:31.448"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:31.449" endtime="20240705 12:50:31.500"/>
</kw>
<status status="PASS" starttime="20240705 12:50:31.448" endtime="20240705 12:50:31.500"/>
</branch>
<status status="PASS" starttime="20240705 12:50:31.448" endtime="20240705 12:50:31.501"/>
</if>
<status status="PASS" starttime="20240705 12:50:31.391" endtime="20240705 12:50:31.501"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv6_elem_list}</var>
<arg>css=[data-testid="ipv6-config-mode-select"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:31.527" level="INFO">Found Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=3 Locators successfully.</msg>
<msg timestamp="20240705 12:50:31.528" level="INFO">${ipv6_elem_list} = ['css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2', 'css=[data-testid="ipv...</msg>
<status status="PASS" starttime="20240705 12:50:31.501" endtime="20240705 12:50:31.528"/>
</kw>
<for flavor="IN">
<var>${ipv6_elem}</var>
<value>@{ipv6_elem_list}</value>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:31.561" level="INFO">Text: 'Desativado'</msg>
<msg timestamp="20240705 12:50:31.561" level="INFO">${ipv6_text} = Desativado</msg>
<status status="PASS" starttime="20240705 12:50:31.529" endtime="20240705 12:50:31.561"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:31.562" endtime="20240705 12:50:31.562"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:31.563" endtime="20240705 12:50:31.563"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:31.563" endtime="20240705 12:50:31.563"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:31.562" endtime="20240705 12:50:31.563"/>
</branch>
<status status="PASS" starttime="20240705 12:50:31.561" endtime="20240705 12:50:31.563"/>
</if>
<status status="PASS" starttime="20240705 12:50:31.529" endtime="20240705 12:50:31.563"/>
</iter>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:31.606" level="INFO">Text: 'Manual'</msg>
<msg timestamp="20240705 12:50:31.606" level="INFO">${ipv6_text} = Manual</msg>
<status status="PASS" starttime="20240705 12:50:31.564" endtime="20240705 12:50:31.606"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:31.608" endtime="20240705 12:50:31.608"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:31.608" endtime="20240705 12:50:31.609"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:31.609" endtime="20240705 12:50:31.609"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:31.607" endtime="20240705 12:50:31.609"/>
</branch>
<status status="PASS" starttime="20240705 12:50:31.606" endtime="20240705 12:50:31.610"/>
</if>
<status status="PASS" starttime="20240705 12:50:31.564" endtime="20240705 12:50:31.610"/>
</iter>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:31.651" level="INFO">Text: 'Automático'</msg>
<msg timestamp="20240705 12:50:31.651" level="INFO">${ipv6_text} = Automático</msg>
<status status="PASS" starttime="20240705 12:50:31.611" endtime="20240705 12:50:31.651"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:31.652" endtime="20240705 12:50:31.732"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:31.993" level="INFO">States are: ['detached']</msg>
<status status="PASS" starttime="20240705 12:50:31.733" endtime="20240705 12:50:31.994"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:31.994" endtime="20240705 12:50:31.994"/>
</return>
<status status="PASS" starttime="20240705 12:50:31.652" endtime="20240705 12:50:31.994"/>
</branch>
<status status="PASS" starttime="20240705 12:50:31.652" endtime="20240705 12:50:31.995"/>
</if>
<status status="PASS" starttime="20240705 12:50:31.610" endtime="20240705 12:50:31.995"/>
</iter>
<status status="PASS" starttime="20240705 12:50:31.528" endtime="20240705 12:50:31.995"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv6 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:31.995" endtime="20240705 12:50:31.996"/>
</kw>
<status status="PASS" starttime="20240705 12:50:31.390" endtime="20240705 12:50:31.996"/>
</kw>
<status status="PASS" starttime="20240705 12:50:31.389" endtime="20240705 12:50:31.996"/>
</kw>
<kw name="IPv6 configuration type &quot;Link-local&quot; should be available" library="wan" sourcename="IPv6 configuration type &quot;${text}&quot; should be available">
<kw name="Select IPv6 configuration type &quot;${text}&quot;" library="wan" sourcename="Select IPv6 configuration type &quot;${text}&quot;">
<kw name="Open IPv6 configuration type selection dropdown menu" library="wan">
<kw name="Get Element States" library="Browser">
<var>${elem_states}</var>
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT_DROPDOWN}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:32.061" level="INFO">States are: ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<msg timestamp="20240705 12:50:32.061" level="INFO">${elem_states} = ['attached', 'hidden', 'enabled', 'editable', 'defocused']</msg>
<status status="PASS" starttime="20240705 12:50:31.998" endtime="20240705 12:50:32.061"/>
</kw>
<if>
<branch type="IF" condition="&quot;hidden&quot; in ${elem_states}">
<kw name="Click" library="Browser">
<arg>${NETWORK_WAN_PAGE_IPV6_CONFIG_TYPE_SELECT}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:32.063" endtime="20240705 12:50:32.130"/>
</kw>
<status status="PASS" starttime="20240705 12:50:32.062" endtime="20240705 12:50:32.130"/>
</branch>
<status status="PASS" starttime="20240705 12:50:32.062" endtime="20240705 12:50:32.131"/>
</if>
<status status="PASS" starttime="20240705 12:50:31.998" endtime="20240705 12:50:32.131"/>
</kw>
<kw name="Get Elements" library="Browser">
<var>${ipv6_elem_list}</var>
<arg>css=[data-testid="ipv6-config-mode-select"] li</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20240705 12:50:32.154" level="INFO">Found Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2,Locator@css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=3 Locators successfully.</msg>
<msg timestamp="20240705 12:50:32.155" level="INFO">${ipv6_elem_list} = ['css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1', 'css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2', 'css=[data-testid="ipv...</msg>
<status status="PASS" starttime="20240705 12:50:32.131" endtime="20240705 12:50:32.155"/>
</kw>
<for flavor="IN">
<var>${ipv6_elem}</var>
<value>@{ipv6_elem_list}</value>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=0</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:32.180" level="INFO">Text: 'Desativado'</msg>
<msg timestamp="20240705 12:50:32.180" level="INFO">${ipv6_text} = Desativado</msg>
<status status="PASS" starttime="20240705 12:50:32.156" endtime="20240705 12:50:32.180"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:32.182" endtime="20240705 12:50:32.182"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:32.183" endtime="20240705 12:50:32.183"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:32.183" endtime="20240705 12:50:32.184"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:32.181" endtime="20240705 12:50:32.187"/>
</branch>
<status status="PASS" starttime="20240705 12:50:32.181" endtime="20240705 12:50:32.187"/>
</if>
<status status="PASS" starttime="20240705 12:50:32.156" endtime="20240705 12:50:32.188"/>
</iter>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=1</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:32.214" level="INFO">Text: 'Manual'</msg>
<msg timestamp="20240705 12:50:32.214" level="INFO">${ipv6_text} = Manual</msg>
<status status="PASS" starttime="20240705 12:50:32.189" endtime="20240705 12:50:32.214"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:32.220" endtime="20240705 12:50:32.221"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:32.221" endtime="20240705 12:50:32.222"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:32.222" endtime="20240705 12:50:32.222"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:32.215" endtime="20240705 12:50:32.223"/>
</branch>
<status status="PASS" starttime="20240705 12:50:32.214" endtime="20240705 12:50:32.223"/>
</if>
<status status="PASS" starttime="20240705 12:50:32.188" endtime="20240705 12:50:32.223"/>
</iter>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=2</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:32.287" level="INFO">Text: 'Automático'</msg>
<msg timestamp="20240705 12:50:32.288" level="INFO">${ipv6_text} = Automático</msg>
<status status="PASS" starttime="20240705 12:50:32.224" endtime="20240705 12:50:32.288"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:32.289" endtime="20240705 12:50:32.289"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240705 12:50:32.290" endtime="20240705 12:50:32.290"/>
</kw>
<return>
<status status="NOT RUN" starttime="20240705 12:50:32.291" endtime="20240705 12:50:32.291"/>
</return>
<status status="NOT RUN" starttime="20240705 12:50:32.288" endtime="20240705 12:50:32.291"/>
</branch>
<status status="PASS" starttime="20240705 12:50:32.288" endtime="20240705 12:50:32.292"/>
</if>
<status status="PASS" starttime="20240705 12:50:32.224" endtime="20240705 12:50:32.292"/>
</iter>
<iter>
<var name="${ipv6_elem}">css=[data-testid="ipv6-config-mode-select"] li &gt;&gt; nth=3</var>
<kw name="Get Text" library="Browser">
<var>${ipv6_text}</var>
<arg>${ipv6_elem}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:32.339" level="INFO">Text: 'Link-local'</msg>
<msg timestamp="20240705 12:50:32.339" level="INFO">${ipv6_text} = Link-local</msg>
<status status="PASS" starttime="20240705 12:50:32.293" endtime="20240705 12:50:32.339"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ipv6_text}&quot; == &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>${ipv6_elem}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:32.341" endtime="20240705 12:50:32.428"/>
</kw>
<kw name="Get Element States" library="Browser">
<arg>[data-testid="ipv4-config-mode-select-ul"]</arg>
<arg>not contains</arg>
<arg>visible</arg>
<arg>message=IPv6 configuration type dropdown did not automatically close upon selection.</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20240705 12:50:32.684" level="INFO">States are: ['detached']</msg>
<status status="PASS" starttime="20240705 12:50:32.428" endtime="20240705 12:50:32.684"/>
</kw>
<return>
<status status="PASS" starttime="20240705 12:50:32.685" endtime="20240705 12:50:32.685"/>
</return>
<status status="PASS" starttime="20240705 12:50:32.340" endtime="20240705 12:50:32.685"/>
</branch>
<status status="PASS" starttime="20240705 12:50:32.340" endtime="20240705 12:50:32.685"/>
</if>
<status status="PASS" starttime="20240705 12:50:32.292" endtime="20240705 12:50:32.686"/>
</iter>
<status status="PASS" starttime="20240705 12:50:32.155" endtime="20240705 12:50:32.686"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>IPv6 configuration type ${text} is not available.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20240705 12:50:32.686" endtime="20240705 12:50:32.686"/>
</kw>
<status status="PASS" starttime="20240705 12:50:31.997" endtime="20240705 12:50:32.686"/>
</kw>
<status status="PASS" starttime="20240705 12:50:31.997" endtime="20240705 12:50:32.687"/>
</kw>
<kw name="Discard saved settings" library="common_resources">
<kw name="Click" library="Browser">
<arg>${HEADER_SETTINGS_ICON}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:32.688" endtime="20240705 12:50:32.827"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${HEADER_SETTINGS_DROPDOWN}</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240705 12:50:32.846" level="INFO">Waited for Element with selector xpath=//*[@id="root"]/div[2]/div[2]/div/div[3]/div[3] at state visible</msg>
<status status="PASS" starttime="20240705 12:50:32.828" endtime="20240705 12:50:32.846"/>
</kw>
<kw name="Click" library="Browser">
<arg>${HEADER_SETTINGS_DISCARD_SETTINGS_BUTTON}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:32.847" endtime="20240705 12:50:32.974"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${HEADER_SETTINGS_DISCARD_SETTINGS_MODAL_CONFIRM_BUTTON}</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240705 12:50:32.993" level="INFO">Waited for Element with selector xpath=//*[@id="overlay-cntse"]/div/div/div[3]/div/button[2] at state visible</msg>
<status status="PASS" starttime="20240705 12:50:32.974" endtime="20240705 12:50:32.993"/>
</kw>
<kw name="Click" library="Browser">
<arg>${HEADER_SETTINGS_DISCARD_SETTINGS_MODAL_CONFIRM_BUTTON}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240705 12:50:32.994" endtime="20240705 12:50:33.074"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240705 12:50:34.077" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240705 12:50:33.076" endtime="20240705 12:50:34.077"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<arg>30s</arg>
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20240705 12:50:34.078" endtime="20240705 12:50:35.742"/>
</kw>
<status status="PASS" starttime="20240705 12:50:32.687" endtime="20240705 12:50:35.743"/>
</kw>
<kw name="No Operation" library="BuiltIn" type="TEARDOWN">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240705 12:50:35.743" endtime="20240705 12:50:35.744"/>
</kw>
<tag>lang-pt</tag>
<tag>network</tag>
<tag>robot:continue-on-failure</tag>
<tag>smoke</tag>
<tag>wan</tag>
<tag>wip</tag>
<status status="PASS" starttime="20240705 12:50:30.000" endtime="20240705 12:50:35.744"/>
</test>
<status status="PASS" starttime="20240705 12:50:01.394" endtime="20240705 12:50:35.764"/>
</suite>
<status status="PASS" starttime="20240705 12:50:01.391" endtime="20240705 12:50:36.049"/>
</suite>
<status status="PASS" starttime="20240705 12:50:01.388" endtime="20240705 12:50:36.066"/>
</suite>
<status status="PASS" starttime="20240705 12:50:01.385" endtime="20240705 12:50:36.079"/>
</suite>
<status status="PASS" starttime="20240705 12:50:01.382" endtime="20240705 12:50:36.093"/>
</suite>
<status status="PASS" starttime="20240705 12:50:01.352" endtime="20240705 12:50:36.097"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="7" fail="0" skip="0">lang-pt</stat>
<stat pass="7" fail="0" skip="0">network</stat>
<stat pass="7" fail="0" skip="0">smoke</stat>
<stat pass="7" fail="0" skip="0">wan</stat>
<stat pass="7" fail="0" skip="0">wip</stat>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="Morpheus-Hypnos">Morpheus-Hypnos</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Tests">Morpheus-Hypnos.Tests</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s1" name="Smoke">Morpheus-Hypnos.Tests.Smoke</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s1-s1" name="Network">Morpheus-Hypnos.Tests.Smoke.Network</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s1-s1-s1" name="Wan">Morpheus-Hypnos.Tests.Smoke.Network.Wan</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s1-s1-s1-s1" name="Portuguese">Morpheus-Hypnos.Tests.Smoke.Network.Wan.Portuguese</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20240705 12:50:02.630" level="WARN">Open Browser is for quick experimentation and debugging only. Use New Page for production.</msg>
</errors>
</robot>
